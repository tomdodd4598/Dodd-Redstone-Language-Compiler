::(nesting) \root::
{0}:
	var f = $1
	var i = $1
{1}:
	%t = f > $0
	cj {2}
	halt
{2}:
	hardware call out f
	call update
	jmp {1}

::(recursive) fib n::
{0}:
	%t = n <= $2
	cj {1}
	jmp {2}
{1}:
	ret $1
{2}:
	%1 = n - $1
	%2 = fun fib %1
	%3 = n - $2
	%4 = fun fib %3
	%5 = %4 + %2
	ret %5

::(nesting) update::
{0}:
	i = i + $1
	f = fun fib i
	ret
