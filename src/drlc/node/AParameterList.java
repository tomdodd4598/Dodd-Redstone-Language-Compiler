/* This file was generated by SableCC (http://www.sablecc.org/). */

package drlc.node;

import java.util.*;
import drlc.analysis.*;

@SuppressWarnings("nls")
public final class AParameterList extends PParameterList
{
    private PLvalueVariable _lvalueVariable_;
    private final LinkedList<PParameterListTail> _parameterListTail_ = new LinkedList<PParameterListTail>();

    public AParameterList()
    {
        // Constructor
    }

    public AParameterList(
        @SuppressWarnings("hiding") PLvalueVariable _lvalueVariable_,
        @SuppressWarnings("hiding") List<?> _parameterListTail_)
    {
        // Constructor
        setLvalueVariable(_lvalueVariable_);

        setParameterListTail(_parameterListTail_);

    }

    @Override
    public Object clone()
    {
        return new AParameterList(
            cloneNode(this._lvalueVariable_),
            cloneList(this._parameterListTail_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParameterList(this);
    }

    public PLvalueVariable getLvalueVariable()
    {
        return this._lvalueVariable_;
    }

    public void setLvalueVariable(PLvalueVariable node)
    {
        if(this._lvalueVariable_ != null)
        {
            this._lvalueVariable_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lvalueVariable_ = node;
    }

    public LinkedList<PParameterListTail> getParameterListTail()
    {
        return this._parameterListTail_;
    }

    public void setParameterListTail(List<?> list)
    {
        for(PParameterListTail e : this._parameterListTail_)
        {
            e.parent(null);
        }
        this._parameterListTail_.clear();

        for(Object obj_e : list)
        {
            PParameterListTail e = (PParameterListTail) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._parameterListTail_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lvalueVariable_)
            + toString(this._parameterListTail_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lvalueVariable_ == child)
        {
            this._lvalueVariable_ = null;
            return;
        }

        if(this._parameterListTail_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lvalueVariable_ == oldChild)
        {
            setLvalueVariable((PLvalueVariable) newChild);
            return;
        }

        for(ListIterator<PParameterListTail> i = this._parameterListTail_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PParameterListTail) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
