/* This file was generated by SableCC (http://www.sablecc.org/). */

package drlc.node;

import drlc.analysis.*;

@SuppressWarnings("nls")
public final class AFunctionExpression7 extends PExpression7
{
    private PExpression7 _expression7_;
    private PParExpressionList _parExpressionList_;

    public AFunctionExpression7()
    {
        // Constructor
    }

    public AFunctionExpression7(
        @SuppressWarnings("hiding") PExpression7 _expression7_,
        @SuppressWarnings("hiding") PParExpressionList _parExpressionList_)
    {
        // Constructor
        setExpression7(_expression7_);

        setParExpressionList(_parExpressionList_);

    }

    @Override
    public Object clone()
    {
        return new AFunctionExpression7(
            cloneNode(this._expression7_),
            cloneNode(this._parExpressionList_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFunctionExpression7(this);
    }

    public PExpression7 getExpression7()
    {
        return this._expression7_;
    }

    public void setExpression7(PExpression7 node)
    {
        if(this._expression7_ != null)
        {
            this._expression7_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expression7_ = node;
    }

    public PParExpressionList getParExpressionList()
    {
        return this._parExpressionList_;
    }

    public void setParExpressionList(PParExpressionList node)
    {
        if(this._parExpressionList_ != null)
        {
            this._parExpressionList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parExpressionList_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expression7_)
            + toString(this._parExpressionList_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expression7_ == child)
        {
            this._expression7_ = null;
            return;
        }

        if(this._parExpressionList_ == child)
        {
            this._parExpressionList_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expression7_ == oldChild)
        {
            setExpression7((PExpression7) newChild);
            return;
        }

        if(this._parExpressionList_ == oldChild)
        {
            setParExpressionList((PParExpressionList) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
