/* This file was generated by SableCC (http://www.sablecc.org/). */

package drlc.node;

import drlc.analysis.*;

@SuppressWarnings("nls")
public final class AIterativeBasicSection extends PBasicSection
{
    private PIterativeBlock _iterativeBlock_;

    public AIterativeBasicSection()
    {
        // Constructor
    }

    public AIterativeBasicSection(
        @SuppressWarnings("hiding") PIterativeBlock _iterativeBlock_)
    {
        // Constructor
        setIterativeBlock(_iterativeBlock_);

    }

    @Override
    public Object clone()
    {
        return new AIterativeBasicSection(
            cloneNode(this._iterativeBlock_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIterativeBasicSection(this);
    }

    public PIterativeBlock getIterativeBlock()
    {
        return this._iterativeBlock_;
    }

    public void setIterativeBlock(PIterativeBlock node)
    {
        if(this._iterativeBlock_ != null)
        {
            this._iterativeBlock_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._iterativeBlock_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._iterativeBlock_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._iterativeBlock_ == child)
        {
            this._iterativeBlock_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._iterativeBlock_ == oldChild)
        {
            setIterativeBlock((PIterativeBlock) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
