/* This file was generated by SableCC (http://www.sablecc.org/). */

package drlc.node;

import drlc.analysis.*;

@SuppressWarnings("nls")
public final class AStandardClosureDeclaratorList extends PClosureDeclaratorList
{
    private PLClosureList _lClosureList_;
    private PDeclaratorList _declaratorList_;
    private PRClosureList _rClosureList_;

    public AStandardClosureDeclaratorList()
    {
        // Constructor
    }

    public AStandardClosureDeclaratorList(
        @SuppressWarnings("hiding") PLClosureList _lClosureList_,
        @SuppressWarnings("hiding") PDeclaratorList _declaratorList_,
        @SuppressWarnings("hiding") PRClosureList _rClosureList_)
    {
        // Constructor
        setLClosureList(_lClosureList_);

        setDeclaratorList(_declaratorList_);

        setRClosureList(_rClosureList_);

    }

    @Override
    public Object clone()
    {
        return new AStandardClosureDeclaratorList(
            cloneNode(this._lClosureList_),
            cloneNode(this._declaratorList_),
            cloneNode(this._rClosureList_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStandardClosureDeclaratorList(this);
    }

    public PLClosureList getLClosureList()
    {
        return this._lClosureList_;
    }

    public void setLClosureList(PLClosureList node)
    {
        if(this._lClosureList_ != null)
        {
            this._lClosureList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lClosureList_ = node;
    }

    public PDeclaratorList getDeclaratorList()
    {
        return this._declaratorList_;
    }

    public void setDeclaratorList(PDeclaratorList node)
    {
        if(this._declaratorList_ != null)
        {
            this._declaratorList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._declaratorList_ = node;
    }

    public PRClosureList getRClosureList()
    {
        return this._rClosureList_;
    }

    public void setRClosureList(PRClosureList node)
    {
        if(this._rClosureList_ != null)
        {
            this._rClosureList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rClosureList_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lClosureList_)
            + toString(this._declaratorList_)
            + toString(this._rClosureList_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lClosureList_ == child)
        {
            this._lClosureList_ = null;
            return;
        }

        if(this._declaratorList_ == child)
        {
            this._declaratorList_ = null;
            return;
        }

        if(this._rClosureList_ == child)
        {
            this._rClosureList_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lClosureList_ == oldChild)
        {
            setLClosureList((PLClosureList) newChild);
            return;
        }

        if(this._declaratorList_ == oldChild)
        {
            setDeclaratorList((PDeclaratorList) newChild);
            return;
        }

        if(this._rClosureList_ == oldChild)
        {
            setRClosureList((PRClosureList) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
