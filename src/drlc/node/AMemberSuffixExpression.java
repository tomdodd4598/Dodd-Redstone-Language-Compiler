/* This file was generated by SableCC (http://www.sablecc.org/). */

package drlc.node;

import drlc.analysis.*;

@SuppressWarnings("nls")
public final class AMemberSuffixExpression extends PSuffixExpression
{
    private PSuffixExpression _suffixExpression_;
    private TFullStop _fullStop_;
    private PMember _member_;

    public AMemberSuffixExpression()
    {
        // Constructor
    }

    public AMemberSuffixExpression(
        @SuppressWarnings("hiding") PSuffixExpression _suffixExpression_,
        @SuppressWarnings("hiding") TFullStop _fullStop_,
        @SuppressWarnings("hiding") PMember _member_)
    {
        // Constructor
        setSuffixExpression(_suffixExpression_);

        setFullStop(_fullStop_);

        setMember(_member_);

    }

    @Override
    public Object clone()
    {
        return new AMemberSuffixExpression(
            cloneNode(this._suffixExpression_),
            cloneNode(this._fullStop_),
            cloneNode(this._member_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMemberSuffixExpression(this);
    }

    public PSuffixExpression getSuffixExpression()
    {
        return this._suffixExpression_;
    }

    public void setSuffixExpression(PSuffixExpression node)
    {
        if(this._suffixExpression_ != null)
        {
            this._suffixExpression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._suffixExpression_ = node;
    }

    public TFullStop getFullStop()
    {
        return this._fullStop_;
    }

    public void setFullStop(TFullStop node)
    {
        if(this._fullStop_ != null)
        {
            this._fullStop_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fullStop_ = node;
    }

    public PMember getMember()
    {
        return this._member_;
    }

    public void setMember(PMember node)
    {
        if(this._member_ != null)
        {
            this._member_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._member_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._suffixExpression_)
            + toString(this._fullStop_)
            + toString(this._member_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._suffixExpression_ == child)
        {
            this._suffixExpression_ = null;
            return;
        }

        if(this._fullStop_ == child)
        {
            this._fullStop_ = null;
            return;
        }

        if(this._member_ == child)
        {
            this._member_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._suffixExpression_ == oldChild)
        {
            setSuffixExpression((PSuffixExpression) newChild);
            return;
        }

        if(this._fullStop_ == oldChild)
        {
            setFullStop((TFullStop) newChild);
            return;
        }

        if(this._member_ == oldChild)
        {
            setMember((PMember) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
