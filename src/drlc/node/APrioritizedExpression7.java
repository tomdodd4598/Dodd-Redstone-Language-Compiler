/* This file was generated by SableCC (http://www.sablecc.org/). */

package drlc.node;

import drlc.analysis.*;

@SuppressWarnings("nls")
public final class APrioritizedExpression7 extends PExpression7
{
    private PExpression8 _expression8_;

    public APrioritizedExpression7()
    {
        // Constructor
    }

    public APrioritizedExpression7(
        @SuppressWarnings("hiding") PExpression8 _expression8_)
    {
        // Constructor
        setExpression8(_expression8_);

    }

    @Override
    public Object clone()
    {
        return new APrioritizedExpression7(
            cloneNode(this._expression8_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPrioritizedExpression7(this);
    }

    public PExpression8 getExpression8()
    {
        return this._expression8_;
    }

    public void setExpression8(PExpression8 node)
    {
        if(this._expression8_ != null)
        {
            this._expression8_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expression8_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expression8_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expression8_ == child)
        {
            this._expression8_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expression8_ == oldChild)
        {
            setExpression8((PExpression8) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
