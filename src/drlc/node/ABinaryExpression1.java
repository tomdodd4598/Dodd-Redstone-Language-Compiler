/* This file was generated by SableCC (http://www.sablecc.org/). */

package drlc.node;

import drlc.analysis.*;

@SuppressWarnings("nls")
public final class ABinaryExpression1 extends PExpression1
{
    private PExpression1 _expression1_;
    private PEqualityBinaryOp _equalityBinaryOp_;
    private PExpression2 _expression2_;

    public ABinaryExpression1()
    {
        // Constructor
    }

    public ABinaryExpression1(
        @SuppressWarnings("hiding") PExpression1 _expression1_,
        @SuppressWarnings("hiding") PEqualityBinaryOp _equalityBinaryOp_,
        @SuppressWarnings("hiding") PExpression2 _expression2_)
    {
        // Constructor
        setExpression1(_expression1_);

        setEqualityBinaryOp(_equalityBinaryOp_);

        setExpression2(_expression2_);

    }

    @Override
    public Object clone()
    {
        return new ABinaryExpression1(
            cloneNode(this._expression1_),
            cloneNode(this._equalityBinaryOp_),
            cloneNode(this._expression2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABinaryExpression1(this);
    }

    public PExpression1 getExpression1()
    {
        return this._expression1_;
    }

    public void setExpression1(PExpression1 node)
    {
        if(this._expression1_ != null)
        {
            this._expression1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expression1_ = node;
    }

    public PEqualityBinaryOp getEqualityBinaryOp()
    {
        return this._equalityBinaryOp_;
    }

    public void setEqualityBinaryOp(PEqualityBinaryOp node)
    {
        if(this._equalityBinaryOp_ != null)
        {
            this._equalityBinaryOp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._equalityBinaryOp_ = node;
    }

    public PExpression2 getExpression2()
    {
        return this._expression2_;
    }

    public void setExpression2(PExpression2 node)
    {
        if(this._expression2_ != null)
        {
            this._expression2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expression2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expression1_)
            + toString(this._equalityBinaryOp_)
            + toString(this._expression2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expression1_ == child)
        {
            this._expression1_ = null;
            return;
        }

        if(this._equalityBinaryOp_ == child)
        {
            this._equalityBinaryOp_ = null;
            return;
        }

        if(this._expression2_ == child)
        {
            this._expression2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expression1_ == oldChild)
        {
            setExpression1((PExpression1) newChild);
            return;
        }

        if(this._equalityBinaryOp_ == oldChild)
        {
            setEqualityBinaryOp((PEqualityBinaryOp) newChild);
            return;
        }

        if(this._expression2_ == oldChild)
        {
            setExpression2((PExpression2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
