/* This file was generated by SableCC (http://www.sablecc.org/). */

package drlc.node;

import java.util.*;
import drlc.analysis.*;

@SuppressWarnings("nls")
public final class AUnit extends PUnit
{
    private PSetupSection _setupSection_;
    private final LinkedList<PGeneralSection> _generalSection_ = new LinkedList<PGeneralSection>();

    public AUnit()
    {
        // Constructor
    }

    public AUnit(
        @SuppressWarnings("hiding") PSetupSection _setupSection_,
        @SuppressWarnings("hiding") List<?> _generalSection_)
    {
        // Constructor
        setSetupSection(_setupSection_);

        setGeneralSection(_generalSection_);

    }

    @Override
    public Object clone()
    {
        return new AUnit(
            cloneNode(this._setupSection_),
            cloneList(this._generalSection_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAUnit(this);
    }

    public PSetupSection getSetupSection()
    {
        return this._setupSection_;
    }

    public void setSetupSection(PSetupSection node)
    {
        if(this._setupSection_ != null)
        {
            this._setupSection_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._setupSection_ = node;
    }

    public LinkedList<PGeneralSection> getGeneralSection()
    {
        return this._generalSection_;
    }

    public void setGeneralSection(List<?> list)
    {
        for(PGeneralSection e : this._generalSection_)
        {
            e.parent(null);
        }
        this._generalSection_.clear();

        for(Object obj_e : list)
        {
            PGeneralSection e = (PGeneralSection) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._generalSection_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._setupSection_)
            + toString(this._generalSection_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._setupSection_ == child)
        {
            this._setupSection_ = null;
            return;
        }

        if(this._generalSection_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._setupSection_ == oldChild)
        {
            setSetupSection((PSetupSection) newChild);
            return;
        }

        for(ListIterator<PGeneralSection> i = this._generalSection_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PGeneralSection) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
