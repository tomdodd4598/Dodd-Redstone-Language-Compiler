/* This file was generated by SableCC (http://www.sablecc.org/). */

package drlc.node;

import drlc.analysis.*;

@SuppressWarnings("nls")
public final class ACircularRightShiftShiftBinaryOp extends PShiftBinaryOp
{
    private TCircularRightShift _circularRightShift_;

    public ACircularRightShiftShiftBinaryOp()
    {
        // Constructor
    }

    public ACircularRightShiftShiftBinaryOp(
        @SuppressWarnings("hiding") TCircularRightShift _circularRightShift_)
    {
        // Constructor
        setCircularRightShift(_circularRightShift_);

    }

    @Override
    public Object clone()
    {
        return new ACircularRightShiftShiftBinaryOp(
            cloneNode(this._circularRightShift_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACircularRightShiftShiftBinaryOp(this);
    }

    public TCircularRightShift getCircularRightShift()
    {
        return this._circularRightShift_;
    }

    public void setCircularRightShift(TCircularRightShift node)
    {
        if(this._circularRightShift_ != null)
        {
            this._circularRightShift_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._circularRightShift_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._circularRightShift_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._circularRightShift_ == child)
        {
            this._circularRightShift_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._circularRightShift_ == oldChild)
        {
            setCircularRightShift((TCircularRightShift) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
