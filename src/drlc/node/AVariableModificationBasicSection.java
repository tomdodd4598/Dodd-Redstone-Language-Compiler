/* This file was generated by SableCC (http://www.sablecc.org/). */

package drlc.node;

import drlc.analysis.*;

@SuppressWarnings("nls")
public final class AVariableModificationBasicSection extends PBasicSection
{
    private PVariableModification _variableModification_;

    public AVariableModificationBasicSection()
    {
        // Constructor
    }

    public AVariableModificationBasicSection(
        @SuppressWarnings("hiding") PVariableModification _variableModification_)
    {
        // Constructor
        setVariableModification(_variableModification_);

    }

    @Override
    public Object clone()
    {
        return new AVariableModificationBasicSection(
            cloneNode(this._variableModification_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVariableModificationBasicSection(this);
    }

    public PVariableModification getVariableModification()
    {
        return this._variableModification_;
    }

    public void setVariableModification(PVariableModification node)
    {
        if(this._variableModification_ != null)
        {
            this._variableModification_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._variableModification_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._variableModification_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._variableModification_ == child)
        {
            this._variableModification_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._variableModification_ == oldChild)
        {
            setVariableModification((PVariableModification) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
