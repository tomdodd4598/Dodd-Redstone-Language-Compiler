/* This file was generated by SableCC (http://www.sablecc.org/). */

package drlc.node;

import drlc.analysis.*;

@SuppressWarnings("nls")
public final class AModuleDefinitionStaticSection extends PStaticSection
{
    private PModuleDefinition _moduleDefinition_;

    public AModuleDefinitionStaticSection()
    {
        // Constructor
    }

    public AModuleDefinitionStaticSection(
        @SuppressWarnings("hiding") PModuleDefinition _moduleDefinition_)
    {
        // Constructor
        setModuleDefinition(_moduleDefinition_);

    }

    @Override
    public Object clone()
    {
        return new AModuleDefinitionStaticSection(
            cloneNode(this._moduleDefinition_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAModuleDefinitionStaticSection(this);
    }

    public PModuleDefinition getModuleDefinition()
    {
        return this._moduleDefinition_;
    }

    public void setModuleDefinition(PModuleDefinition node)
    {
        if(this._moduleDefinition_ != null)
        {
            this._moduleDefinition_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._moduleDefinition_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._moduleDefinition_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._moduleDefinition_ == child)
        {
            this._moduleDefinition_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._moduleDefinition_ == oldChild)
        {
            setModuleDefinition((PModuleDefinition) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
