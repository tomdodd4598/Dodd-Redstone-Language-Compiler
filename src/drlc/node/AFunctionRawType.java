/* This file was generated by SableCC (http://www.sablecc.org/). */

package drlc.node;

import drlc.analysis.*;

@SuppressWarnings("nls")
public final class AFunctionRawType extends PRawType
{
    private TFn _fn_;
    private PParParameterList _parParameterList_;
    private PReturnType _returnType_;

    public AFunctionRawType()
    {
        // Constructor
    }

    public AFunctionRawType(
        @SuppressWarnings("hiding") TFn _fn_,
        @SuppressWarnings("hiding") PParParameterList _parParameterList_,
        @SuppressWarnings("hiding") PReturnType _returnType_)
    {
        // Constructor
        setFn(_fn_);

        setParParameterList(_parParameterList_);

        setReturnType(_returnType_);

    }

    @Override
    public Object clone()
    {
        return new AFunctionRawType(
            cloneNode(this._fn_),
            cloneNode(this._parParameterList_),
            cloneNode(this._returnType_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFunctionRawType(this);
    }

    public TFn getFn()
    {
        return this._fn_;
    }

    public void setFn(TFn node)
    {
        if(this._fn_ != null)
        {
            this._fn_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fn_ = node;
    }

    public PParParameterList getParParameterList()
    {
        return this._parParameterList_;
    }

    public void setParParameterList(PParParameterList node)
    {
        if(this._parParameterList_ != null)
        {
            this._parParameterList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parParameterList_ = node;
    }

    public PReturnType getReturnType()
    {
        return this._returnType_;
    }

    public void setReturnType(PReturnType node)
    {
        if(this._returnType_ != null)
        {
            this._returnType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._returnType_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._fn_)
            + toString(this._parParameterList_)
            + toString(this._returnType_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._fn_ == child)
        {
            this._fn_ = null;
            return;
        }

        if(this._parParameterList_ == child)
        {
            this._parParameterList_ = null;
            return;
        }

        if(this._returnType_ == child)
        {
            this._returnType_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._fn_ == oldChild)
        {
            setFn((TFn) newChild);
            return;
        }

        if(this._parParameterList_ == oldChild)
        {
            setParParameterList((PParParameterList) newChild);
            return;
        }

        if(this._returnType_ == oldChild)
        {
            setReturnType((PReturnType) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
