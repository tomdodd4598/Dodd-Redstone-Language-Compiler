/* This file was generated by SableCC (http://www.sablecc.org/). */

package drlc.lexer;

import java.io.*;
import drlc.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
<<<<<<< HEAD
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
=======
>>>>>>> parent of 543a4da (Added array syntax to language spec and added "all" utility compiler mode)
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

<<<<<<< HEAD
    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSetupPrefix(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSetArgc(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConst(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVar(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVoid(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFun(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOut(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TArgc(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TArgv(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReturn(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElif(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElse(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhile(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TContinue(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBreak(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEquals(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBracket(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBracket(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrace(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrace(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAddressOf(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDereference(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComplement(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TToBool(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNot(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAnd(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOr(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TXor(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLeftShift(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRightShift(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMultiply(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDivide(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TModulo(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEqualTo(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNotEqualTo(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLessThan(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLessOrEqual(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMoreThan(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMoreOrEqual(line, pos); }
    Token new46(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TName(text, line, pos); }
    Token new47(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInteger(text, line, pos); }
    Token new48(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new49(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(text, line, pos); }
=======
    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSetArgc(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConst(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVar(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVoid(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFun(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOut(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TArgc(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TArgv(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReturn(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElse(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhile(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TContinue(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBreak(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEquals(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrace(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrace(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAddressOf(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDereference(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComplement(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TToBool(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNot(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAnd(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOr(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TXor(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLeftShift(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRightShift(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMultiply(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDivide(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TModulo(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEqualTo(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNotEqualTo(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLessThan(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLessOrEqual(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMoreThan(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMoreOrEqual(line, pos); }
    Token new42(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TName(text, line, pos); }
    Token new43(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInteger(text, line, pos); }
    Token new44(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new45(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(text, line, pos); }
>>>>>>> parent of 543a4da (Added array syntax to language spec and added "all" utility compiler mode)

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
<<<<<<< HEAD
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {33, 33, 5}, {35, 35, 6}, {36, 36, 7}, {37, 37, 8}, {38, 38, 9}, {40, 40, 10}, {41, 41, 11}, {42, 42, 12}, {43, 43, 13}, {44, 44, 14}, {45, 45, 15}, {47, 47, 16}, {48, 57, 17}, {59, 59, 18}, {60, 60, 19}, {61, 61, 20}, {62, 62, 21}, {63, 63, 22}, {64, 64, 23}, {65, 90, 24}, {91, 91, 25}, {93, 93, 26}, {94, 94, 27}, {95, 95, 24}, {97, 97, 28}, {98, 98, 29}, {99, 99, 30}, {100, 100, 24}, {101, 101, 31}, {102, 102, 32}, {103, 104, 24}, {105, 105, 33}, {106, 110, 24}, {111, 111, 34}, {112, 113, 24}, {114, 114, 35}, {115, 115, 36}, {116, 117, 24}, {118, 118, 37}, {119, 119, 38}, {120, 122, 24}, {123, 123, 39}, {124, 124, 40}, {125, 125, 41}, {126, 126, 42}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 43}, {13, 32, -2}, },
            {{9, 32, -2}, },
            {{61, 61, 44}, },
            {},
=======
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {33, 33, 5}, {35, 35, 6}, {37, 37, 7}, {38, 38, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {47, 47, 15}, {48, 57, 16}, {59, 59, 17}, {60, 60, 18}, {61, 61, 19}, {62, 62, 20}, {63, 63, 21}, {64, 64, 22}, {65, 90, 23}, {94, 94, 24}, {95, 95, 23}, {97, 97, 25}, {98, 98, 26}, {99, 99, 27}, {100, 100, 23}, {101, 101, 28}, {102, 102, 29}, {103, 104, 23}, {105, 105, 30}, {106, 110, 23}, {111, 111, 31}, {112, 113, 23}, {114, 114, 32}, {115, 115, 33}, {116, 117, 23}, {118, 118, 34}, {119, 119, 35}, {120, 122, 23}, {123, 123, 36}, {124, 124, 37}, {125, 125, 38}, {126, 126, 39}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 40}, {13, 32, -2}, },
            {{9, 32, -2}, },
            {{61, 61, 41}, },
>>>>>>> parent of 543a4da (Added array syntax to language spec and added "all" utility compiler mode)
            {},
            {},
            {},
            {},
            {},
            {},
            {{48, 57, 17}, },
            {},
<<<<<<< HEAD
            {{48, 57, 17}, },
            {{42, 42, 45}, {47, 47, 46}, },
            {{48, 57, 17}, },
            {},
            {{60, 60, 47}, {61, 61, 48}, },
            {{61, 61, 49}, },
            {{61, 61, 50}, {62, 62, 51}, },
            {},
            {},
            {{48, 57, 52}, {65, 90, 53}, {95, 95, 53}, {97, 122, 53}, },
=======
            {{48, 57, 16}, },
            {{42, 42, 42}, {47, 47, 43}, },
            {{48, 57, 16}, },
            {},
            {{60, 60, 44}, {61, 61, 45}, },
            {{61, 61, 46}, },
            {{61, 61, 47}, {62, 62, 48}, },
>>>>>>> parent of 543a4da (Added array syntax to language spec and added "all" utility compiler mode)
            {},
            {},
            {{48, 57, 49}, {65, 90, 50}, {95, 95, 50}, {97, 122, 50}, },
            {},
<<<<<<< HEAD
            {{48, 95, -26}, {97, 113, 53}, {114, 114, 54}, {115, 122, 53}, },
            {{48, 113, -30}, {114, 114, 55}, {115, 122, 53}, },
            {{48, 95, -26}, {97, 110, 53}, {111, 111, 56}, {112, 122, 53}, },
            {{48, 95, -26}, {97, 107, 53}, {108, 108, 57}, {109, 122, 53}, },
            {{48, 95, -26}, {97, 116, 53}, {117, 117, 58}, {118, 122, 53}, },
            {{48, 95, -26}, {97, 101, 53}, {102, 102, 59}, {103, 122, 53}, },
            {{48, 116, -34}, {117, 117, 60}, {118, 122, 53}, },
            {{48, 95, -26}, {97, 100, 53}, {101, 101, 61}, {102, 122, 53}, },
            {{48, 100, -37}, {101, 101, 62}, {102, 122, 53}, },
            {{48, 95, -26}, {97, 97, 63}, {98, 110, 53}, {111, 111, 64}, {112, 122, 53}, },
            {{48, 95, -26}, {97, 103, 53}, {104, 104, 65}, {105, 122, 53}, },
=======
            {{48, 95, -25}, {97, 113, 50}, {114, 114, 51}, {115, 122, 50}, },
            {{48, 113, -27}, {114, 114, 52}, {115, 122, 50}, },
            {{48, 95, -25}, {97, 110, 50}, {111, 111, 53}, {112, 122, 50}, },
            {{48, 95, -25}, {97, 107, 50}, {108, 108, 54}, {109, 122, 50}, },
            {{48, 95, -25}, {97, 116, 50}, {117, 117, 55}, {118, 122, 50}, },
            {{48, 95, -25}, {97, 101, 50}, {102, 102, 56}, {103, 122, 50}, },
            {{48, 116, -31}, {117, 117, 57}, {118, 122, 50}, },
            {{48, 95, -25}, {97, 100, 50}, {101, 101, 58}, {102, 122, 50}, },
            {{48, 100, -34}, {101, 101, 59}, {102, 122, 50}, },
            {{48, 95, -25}, {97, 97, 60}, {98, 110, 50}, {111, 111, 61}, {112, 122, 50}, },
            {{48, 95, -25}, {97, 103, 50}, {104, 104, 62}, {105, 122, 50}, },
>>>>>>> parent of 543a4da (Added array syntax to language spec and added "all" utility compiler mode)
            {},
            {},
            {},
            {},
            {{9, 32, -2}, },
            {},
<<<<<<< HEAD
            {{0, 41, 66}, {42, 42, 67}, {43, 65535, 66}, },
            {{0, 9, 68}, {10, 10, 69}, {11, 12, 68}, {13, 13, 70}, {14, 65535, 68}, },
=======
            {{0, 41, 63}, {42, 42, 64}, {43, 65535, 63}, },
            {{0, 9, 65}, {10, 10, 66}, {11, 12, 65}, {13, 13, 67}, {14, 65535, 65}, },
>>>>>>> parent of 543a4da (Added array syntax to language spec and added "all" utility compiler mode)
            {},
            {},
            {},
            {},
            {},
<<<<<<< HEAD
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 95, -26}, {97, 102, 53}, {103, 103, 71}, {104, 122, 53}, },
            {{48, 100, -37}, {101, 101, 72}, {102, 122, 53}, },
            {{48, 95, -26}, {97, 109, 53}, {110, 110, 73}, {111, 122, 53}, },
            {{48, 95, -26}, {97, 104, 53}, {105, 105, 74}, {106, 114, 53}, {115, 115, 75}, {116, 122, 53}, },
            {{48, 109, -58}, {110, 110, 76}, {111, 122, 53}, },
            {{48, 122, -26}, },
            {{48, 95, -26}, {97, 115, 53}, {116, 116, 77}, {117, 122, 53}, },
            {{48, 115, -62}, {116, 116, 78}, {117, 122, 53}, },
            {{48, 115, -62}, {116, 116, 79}, {117, 122, 53}, },
            {{48, 113, -30}, {114, 114, 80}, {115, 122, 53}, },
            {{48, 104, -59}, {105, 105, 81}, {106, 122, 53}, },
            {{48, 104, -59}, {105, 105, 82}, {106, 122, 53}, },
            {{0, 65535, -47}, },
            {{0, 41, 83}, {42, 42, 67}, {43, 46, 83}, {47, 47, 84}, {48, 65535, 83}, },
            {{0, 65535, -48}, },
            {},
            {{10, 10, 85}, },
            {{48, 95, -26}, {97, 98, 53}, {99, 99, 86}, {100, 117, 53}, {118, 118, 87}, {119, 122, 53}, },
            {{48, 95, -26}, {97, 97, 88}, {98, 122, 53}, },
            {{48, 95, -26}, {97, 114, 53}, {115, 115, 89}, {116, 116, 90}, {117, 122, 53}, },
            {{48, 101, -35}, {102, 102, 91}, {103, 122, 53}, },
            {{48, 100, -37}, {101, 101, 92}, {102, 122, 53}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 116, -34}, {117, 117, 93}, {118, 122, 53}, },
            {{48, 90, -26}, {95, 95, 94}, {97, 122, 53}, },
            {{48, 122, -26}, },
            {{48, 95, -26}, {97, 99, 53}, {100, 100, 95}, {101, 122, 53}, },
            {{48, 107, -33}, {108, 108, 96}, {109, 122, 53}, },
            {{0, 41, 97}, {42, 42, 98}, {43, 65535, 97}, },
            {},
            {},
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 95, -26}, {97, 106, 53}, {107, 107, 99}, {108, 122, 53}, },
            {{48, 115, -62}, {116, 116, 100}, {117, 122, 53}, },
            {{48, 104, -59}, {105, 105, 101}, {106, 122, 53}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 113, -30}, {114, 114, 102}, {115, 122, 53}, },
            {{48, 95, -26}, {97, 97, 103}, {98, 122, 53}, },
            {{48, 122, -26}, },
            {{48, 100, -37}, {101, 101, 104}, {102, 122, 53}, },
            {{0, 65535, -85}, },
            {{0, 41, 83}, {42, 42, 98}, {43, 65535, -69}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 109, -58}, {110, 110, 105}, {111, 122, 53}, },
            {{48, 109, -58}, {110, 110, 106}, {111, 122, 53}, },
            {{48, 113, -30}, {114, 114, 107}, {115, 122, 53}, },
            {{48, 122, -26}, },
            {{48, 116, -34}, {117, 117, 108}, {118, 122, 53}, },
            {{48, 122, -26}, },
            {{48, 102, -56}, {103, 103, 109}, {104, 122, 53}, },
            {{48, 100, -37}, {101, 101, 110}, {102, 122, 53}, },
            {{48, 98, -73}, {99, 99, 111}, {100, 122, 53}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
=======
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 95, -25}, {97, 102, 50}, {103, 103, 68}, {104, 122, 50}, },
            {{48, 100, -34}, {101, 101, 69}, {102, 122, 50}, },
            {{48, 95, -25}, {97, 109, 50}, {110, 110, 70}, {111, 122, 50}, },
            {{48, 95, -25}, {97, 114, 50}, {115, 115, 71}, {116, 122, 50}, },
            {{48, 109, -55}, {110, 110, 72}, {111, 122, 50}, },
            {{48, 122, -25}, },
            {{48, 95, -25}, {97, 115, 50}, {116, 116, 73}, {117, 122, 50}, },
            {{48, 115, -59}, {116, 116, 74}, {117, 122, 50}, },
            {{48, 115, -59}, {116, 116, 75}, {117, 122, 50}, },
            {{48, 113, -27}, {114, 114, 76}, {115, 122, 50}, },
            {{48, 95, -25}, {97, 104, 50}, {105, 105, 77}, {106, 122, 50}, },
            {{48, 104, -63}, {105, 105, 78}, {106, 122, 50}, },
            {{0, 65535, -44}, },
            {{0, 41, 79}, {42, 42, 64}, {43, 46, 79}, {47, 47, 80}, {48, 65535, 79}, },
            {{0, 65535, -45}, },
            {},
            {{10, 10, 81}, },
            {{48, 95, -25}, {97, 98, 50}, {99, 99, 82}, {100, 117, 50}, {118, 118, 83}, {119, 122, 50}, },
            {{48, 95, -25}, {97, 97, 84}, {98, 122, 50}, },
            {{48, 114, -56}, {115, 115, 85}, {116, 116, 86}, {117, 122, 50}, },
            {{48, 100, -34}, {101, 101, 87}, {102, 122, 50}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 116, -31}, {117, 117, 88}, {118, 122, 50}, },
            {{48, 90, -25}, {95, 95, 89}, {97, 122, 50}, },
            {{48, 122, -25}, },
            {{48, 95, -25}, {97, 99, 50}, {100, 100, 90}, {101, 122, 50}, },
            {{48, 107, -30}, {108, 108, 91}, {109, 122, 50}, },
            {{0, 41, 92}, {42, 42, 93}, {43, 65535, 92}, },
            {},
            {},
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 95, -25}, {97, 106, 50}, {107, 107, 94}, {108, 122, 50}, },
            {{48, 115, -59}, {116, 116, 95}, {117, 122, 50}, },
            {{48, 104, -63}, {105, 105, 96}, {106, 122, 50}, },
            {{48, 122, -25}, },
            {{48, 113, -27}, {114, 114, 97}, {115, 122, 50}, },
            {{48, 95, -25}, {97, 97, 98}, {98, 122, 50}, },
            {{48, 122, -25}, },
            {{48, 100, -34}, {101, 101, 99}, {102, 122, 50}, },
            {{0, 65535, -81}, },
            {{0, 41, 79}, {42, 42, 93}, {43, 65535, -66}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 109, -55}, {110, 110, 100}, {111, 122, 50}, },
            {{48, 109, -55}, {110, 110, 101}, {111, 122, 50}, },
            {{48, 113, -27}, {114, 114, 102}, {115, 122, 50}, },
            {{48, 122, -25}, },
            {{48, 116, -31}, {117, 117, 103}, {118, 122, 50}, },
            {{48, 122, -25}, },
            {{48, 102, -53}, {103, 103, 104}, {104, 122, 50}, },
            {{48, 100, -34}, {101, 101, 105}, {102, 122, 50}, },
            {{48, 98, -70}, {99, 99, 106}, {100, 122, 50}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
>>>>>>> parent of 543a4da (Added array syntax to language spec and added "all" utility compiler mode)
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
<<<<<<< HEAD
        {-1, 48, 48, 48, 48, 31, 26, 0, 39, 32, 17, 18, 37, 27, 23, 28, 38, 47, 24, 42, 16, 44, 30, 25, 46, 19, 20, 34, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 21, 33, 22, 29, 48, 41, -1, -1, 35, 43, 40, 45, 36, 46, 46, 46, 46, 46, 46, 46, 10, 46, 46, 46, 46, 46, 46, -1, -1, -1, 49, 49, 46, 46, 46, 46, 46, 5, 6, 46, 46, 3, 46, 46, -1, 49, 49, 7, 8, 46, 46, 46, 11, 12, 46, 46, 4, 46, -1, -1, 15, 2, 46, 46, 46, 13, 46, 9, 46, 46, 46, 14, 1, },
=======
        {-1, 44, 44, 44, 44, 27, 22, 35, 28, 15, 16, 33, 23, 19, 24, 34, 43, 20, 38, 14, 40, 26, 21, 42, 30, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 17, 29, 18, 25, 44, 37, -1, -1, 31, 39, 36, 41, 32, 42, 42, 42, 42, 42, 42, 42, 9, 42, 42, 42, 42, 42, 42, -1, -1, -1, 45, 45, 42, 42, 42, 42, 4, 5, 42, 42, 2, 42, 42, -1, 45, 45, 6, 7, 42, 42, 42, 10, 42, 42, 3, 42, -1, -1, 13, 1, 42, 42, 42, 11, 42, 8, 42, 42, 42, 12, 0, },
>>>>>>> parent of 543a4da (Added array syntax to language spec and added "all" utility compiler mode)

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
